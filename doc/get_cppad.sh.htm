<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Get Cppad</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Get Cppad">
<meta name="keywords" id="keywords" content=" get cppad syntax top source directory settings cppad_prefix extra_cxx_flags build_type test_cppad caching ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_get_cppad.sh_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/cppad_py" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="install_error.htm" target="_top">Prev</a>
</td><td><a href="library.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_py</option>
<option>setup.py</option>
<option>get_cppad.sh</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_py_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_setup.py_htm.js'></script>
</td>
<td>get_cppad.sh</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@<center><b><big><big>Get Cppad</big></big></b></center>

<br><a href="get_cppad.sh.htm#Syntax" target="_top">Syntax</a>
<br><a href="get_cppad.sh.htm#Top Source Directory" target="_top">Top&nbsp;Source&nbsp;Directory</a>
<br><a href="get_cppad.sh.htm#Settings" target="_top">Settings</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="get_cppad.sh.htm#Settings.cppad_prefix" target="_top">cppad_prefix</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="get_cppad.sh.htm#Settings.extra_cxx_flags" target="_top">extra_cxx_flags</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="get_cppad.sh.htm#Settings.build_type" target="_top">build_type</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="get_cppad.sh.htm#Settings.test_cppad" target="_top">test_cppad</a>
<br><a href="get_cppad.sh.htm#Caching" target="_top">Caching</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>bin/get_cppad.sh</span></font></code>


<br>
<br>
<b><big><a name="Top Source Directory" id="Top Source Directory">Top Source Directory</a></big></b>
<br>
This program must be run from the
<a href="setup.py.htm#Download.Top Source Directory" target="_top"><span style='white-space: nowrap'>top&nbsp;source&nbsp;directory</span></a>
.
Each time it is run it removes the old <code><font color="blue">build</font></code> directory and
starts over.

<br>
<br>
<b><big><a name="Settings" id="Settings">Settings</a></big></b>
<br>
If you change any of these settings, you must re-run <code><font color="blue">get_cppad.sh</font></code>.

<br>
<br>
<big><a name="Settings.cppad_prefix" id="Settings.cppad_prefix">cppad_prefix</a></big>
<br>
This prefix is used to install CppAD may be a local director; e.g.,
<code><font color="blue">build/prefix</font></code> or an absolute path; e.g., <code><font color="blue">/usr/local</font></code>,
it may include the shell variable <code><font color="blue">$HOME</font></code> but no variables:
<pre style='display:inline'><tt>
<font color="#009900">cppad_prefix</font><font color="#990000">=</font><font color="#FF0000">"$HOME/prefix/cppad"</font>
</tt></pre>
<br>
<big><a name="Settings.extra_cxx_flags" id="Settings.extra_cxx_flags">extra_cxx_flags</a></big>
<br>
Extra compiler false used when compiling c++ code not including the
debugging and optimization flags.
The ones below are example flags are used by g++:
<pre style='display:inline'><tt>
<font color="#009900">extra_cxx_flags</font><font color="#990000">=</font><font color="#FF0000">'-Wall -pedantic-errors -Wno-unused-result -std=c++11'</font>
</tt></pre>
<br>
<big><a name="Settings.build_type" id="Settings.build_type">build_type</a></big>
<br>
This must be must <code><font color="blue">debug</font></code> or <code><font color="blue">release</font></code>.
The debug version has more error messaging while the release
version runs faster.
<pre style='display:inline'><tt>
<font color="#009900">build_type</font><font color="#990000">=</font><font color="#FF0000">'release'</font>
</tt></pre>
If you used the <code><font color="blue">debug</font></code> build type you may get the following warning
from the compiler (because the optimization is totally turned off):
<code><font color='blue'><pre style='display:inline'> 
     #warning _FORTIFY_SOURCE requires compiling with optimization
</pre></font></code>
<br>
<big><a name="Settings.test_cppad" id="Settings.test_cppad">test_cppad</a></big>
<br>
This must be must <code><font color="blue">true</font></code> or <code><font color="blue">false</font></code>.
Cppad has a huge test suite and this can take a significant amount of time,
but it may be useful if you have problems.
<pre style='display:inline'><tt>
<font color="#009900">test_cppad</font><font color="#990000">=</font><font color="#FF0000">'false'</font>
</tt></pre>
<br>
<b><big><a name="Caching" id="Caching">Caching</a></big></b>
<br>
This procedure cashes previous builds so that when you re-run
this script it does not re-do all the work.
If you have trouble, try deleting the directory

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;build/cppad-</span></font><i><font color="black"><span style='white-space: nowrap'>yyyymmdd</span></font></i><font color="blue"><span style='white-space: nowrap'>.git<br>
</span></font></code>
and re-running this script.


<hr>Input File: bin/get_cppad.sh

</body>
</html>
