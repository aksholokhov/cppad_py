<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Python: Abort Recording a_double Operations: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Python: Abort Recording a_double Operations: Example and Test">
<meta name="keywords" id="keywords" content=" python: abort recording a_double operations: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_fun_abort_xam.py_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_py" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="py_abort_recording.htm" target="_top">Prev</a>
</td><td><a href="py_fun_ctor.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_py</option>
<option>library</option>
<option>py_lib</option>
<option>py_fun</option>
<option>py_abort_recording</option>
<option>fun_abort_xam.py</option>
</select>
</td>
<td>
<select onchange='choose_down4(this)'>
<option>library-&gt;</option>
<option>py_lib</option>
<option>cpp_lib</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>py_lib-&gt;</option>
<option>py_fun</option>
<option>py_sparse</option>
<option>py_utility</option>
<option>more_py</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>py_fun-&gt;</option>
<option>py_independent</option>
<option>py_abort_recording</option>
<option>py_fun_ctor</option>
<option>py_fun_property</option>
<option>py_fun_new_dynamic</option>
<option>py_fun_jacobian</option>
<option>py_fun_hessian</option>
<option>py_fun_forward</option>
<option>py_fun_reverse</option>
<option>py_fun_optimize</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>py_abort_recording-&gt;</option>
<option>fun_abort_xam.py</option>
</select>
</td>
<td>fun_abort_xam.py</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@ 

<center><b><big><big>Python: Abort Recording a_double Operations: Example and Test</big></big></b></center>
<pre><tt><b><font color="#0000FF">def</font></b> <b><font color="#000000">fun_abort_xam</font></b><font color="#990000">()</font> <font color="#990000">:</font>
     <i><font color="#9A1900">#</font></i>
     <b><font color="#000080">import</font></b> numpy
     <b><font color="#000080">import</font></b> numpy
     <b><font color="#000080">import</font></b> cppad_py
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># initialize return variable</font></i>
     ok <font color="#990000">=</font> True
     <i><font color="#9A1900"># ---------------------------------------------------------------------</font></i>
     n_ind <font color="#990000">=</font> <font color="#993399">2</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># create ax</font></i>
     x <font color="#990000">=</font> numpy<font color="#990000">.</font><b><font color="#000000">empty</font></b><font color="#990000">(</font>n_ind<font color="#990000">,</font> dtype<font color="#990000">=</font>float<font color="#990000">)</font>
     <b><font color="#0000FF">for</font></b> i <b><font color="#0000FF">in</font></b> <b><font color="#000000">range</font></b><font color="#990000">(</font> n_ind  <font color="#990000">)</font> <font color="#990000">:</font>
          x<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> i <font color="#990000">+</font> <font color="#993399">1.0</font>
     <i><font color="#9A1900">#</font></i>
     ax <font color="#990000">=</font> cppad_py<font color="#990000">.</font><b><font color="#000000">independent</font></b><font color="#990000">(</font>x<font color="#990000">)</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># preform some a_double operations</font></i>
     ax0 <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>
     ax1 <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font>
     ay <font color="#990000">=</font> ax0 <font color="#990000">+</font> ax1
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># check that ay is a variable; its value depends on the value of ax</font></i>
     ok <font color="#990000">=</font> ok <b><font color="#0000FF">and</font></b> ay<font color="#990000">.</font><b><font color="#000000">variable</font></b><font color="#990000">()</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># abort this recording</font></i>
     cppad_py<font color="#990000">.</font><b><font color="#000000">abort_recording</font></b><font color="#990000">()</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># check that ay is now a parameter, no longer a variable.</font></i>
     ok <font color="#990000">=</font> ok <b><font color="#0000FF">and</font></b> ay<font color="#990000">.</font><b><font color="#000000">parameter</font></b><font color="#990000">()</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># since it is a parameter, we can retrieve its value</font></i>
     y <font color="#990000">=</font> ay<font color="#990000">.</font><b><font color="#000000">value</font></b><font color="#990000">()</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># its value should be x0 + x1</font></i>
     ok <font color="#990000">=</font> ok <b><font color="#0000FF">and</font></b> y  <font color="#990000">==</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># an abort when not recording has no effect</font></i>
     cppad_py<font color="#990000">.</font><b><font color="#000000">abort_recording</font></b><font color="#990000">()</font>
     <i><font color="#9A1900">#</font></i>
     <b><font color="#0000FF">return</font></b><font color="#990000">(</font> ok <font color="#990000">)</font>
<i><font color="#9A1900">#</font></i></tt></pre>

<hr>Input File: lib/example/python/fun_abort_xam.py

</body>
</html>
