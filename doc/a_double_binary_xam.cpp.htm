<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>C++: a_double Binary Operators With AD Result: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="C++: a_double Binary Operators With AD Result: Example and Test">
<meta name="keywords" id="keywords" content=" c++: a_double binary operators with ad result: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_a_double_binary_xam.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/cppad_py" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="a_double_binary.htm" target="_top">Prev</a>
</td><td><a href="a_double_binary_xam.py.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_py</option>
<option>library</option>
<option>cpp_lib</option>
<option>a_double</option>
<option>a_double_binary</option>
<option>a_double_binary_xam.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_library_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cpp_lib_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_a_double_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_a_double_binary_htm.js'></script>
</td>
<td>a_double_binary_xam.cpp</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@<center><b><big><big>C++: a_double Binary Operators With AD Result: Example and Test</big></big></b></center>

<br><pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cstdio&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/py/cppad_py.hpp&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">a_double_binary_xam</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font> <font color="#FF0000">{</font>
     <b><font color="#0000FF">using</font></b> cppad_py<font color="#990000">::</font>a_double<font color="#990000">;</font>
     <font color="#009900">bool</font> ok      <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <font color="#008080">a_double</font> a2  <font color="#990000">=</font> <font color="#993399">2.0</font><font color="#990000">;</font>
     <font color="#008080">a_double</font> <b><font color="#000000">a3</font></b><font color="#990000">(</font><font color="#993399">3.0</font><font color="#990000">);</font>
     <i><font color="#9A1900">// -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// a_double op a_double</font></i>
     <font color="#008080">a_double</font> a5       <font color="#990000">=</font> a2 <font color="#990000">+</font> a3<font color="#990000">;</font>
     <font color="#008080">a_double</font> a6       <font color="#990000">=</font> a2 <font color="#990000">*</font> a3<font color="#990000">;</font>
     <font color="#008080">a_double</font> a1_minus <font color="#990000">=</font> a2 <font color="#990000">-</font> a3<font color="#990000">;</font>
     <font color="#008080">a_double</font> a23      <font color="#990000">=</font> a2 <font color="#990000">/</font> a3<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a5 <font color="#990000">==</font> <font color="#993399">5.0</font><font color="#990000">;</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a6 <font color="#990000">==</font> <font color="#993399">6.0</font><font color="#990000">;</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a1_minus <font color="#990000">==</font> <font color="#990000">-</font><font color="#993399">1.0</font><font color="#990000">;</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a23<font color="#990000">.</font><b><font color="#000000">near_equal</font></b><font color="#990000">(</font> <b><font color="#000000">a_double</font></b><font color="#990000">(</font><font color="#993399">2.0</font> <font color="#990000">/</font> <font color="#993399">3.0</font> <font color="#990000">)</font> <font color="#990000">);</font>
     <i><font color="#9A1900">// -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// a_double op double</font></i>
     a5       <font color="#990000">=</font> a2 <font color="#990000">+</font> <font color="#993399">3.0</font><font color="#990000">;</font>
     a6       <font color="#990000">=</font> a2 <font color="#990000">*</font> <font color="#993399">3.0</font><font color="#990000">;</font>
     a1_minus <font color="#990000">=</font> a2 <font color="#990000">-</font> <font color="#993399">3.0</font><font color="#990000">;</font>
     a23      <font color="#990000">=</font> a2 <font color="#990000">/</font> <font color="#993399">3.0</font><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a5 <font color="#990000">==</font> <font color="#993399">5.0</font><font color="#990000">;</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a6 <font color="#990000">==</font> <font color="#993399">6.0</font><font color="#990000">;</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a1_minus <font color="#990000">==</font> <font color="#990000">-</font><font color="#993399">1.0</font><font color="#990000">;</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a23<font color="#990000">.</font><b><font color="#000000">near_equal</font></b><font color="#990000">(</font> <b><font color="#000000">a_double</font></b><font color="#990000">(</font><font color="#993399">2.0</font> <font color="#990000">/</font> <font color="#993399">3.0</font> <font color="#990000">)</font> <font color="#990000">);</font>
     <i><font color="#9A1900">// -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// double op a_double</font></i>
     a5           <font color="#990000">=</font> cppad_py<font color="#990000">::</font><b><font color="#000000">radd</font></b><font color="#990000">(</font><font color="#993399">3.0</font><font color="#990000">,</font> a2<font color="#990000">);</font>
     a6           <font color="#990000">=</font> cppad_py<font color="#990000">::</font><b><font color="#000000">rmul</font></b><font color="#990000">(</font><font color="#993399">3.0</font><font color="#990000">,</font> a2<font color="#990000">);</font>
     <font color="#008080">a_double</font> a1  <font color="#990000">=</font> cppad_py<font color="#990000">::</font><b><font color="#000000">rsub</font></b><font color="#990000">(</font><font color="#993399">3.0</font><font color="#990000">,</font>  a2<font color="#990000">);</font>
     <font color="#008080">a_double</font> a32 <font color="#990000">=</font> cppad_py<font color="#990000">::</font><b><font color="#000000">rdiv</font></b><font color="#990000">(</font><font color="#993399">3.0</font><font color="#990000">,</font> a2<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a5 <font color="#990000">==</font> <font color="#993399">5.0</font><font color="#990000">;</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a6 <font color="#990000">==</font> <font color="#993399">6.0</font><font color="#990000">;</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a1 <font color="#990000">==</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a32<font color="#990000">.</font><b><font color="#000000">near_equal</font></b><font color="#990000">(</font> <b><font color="#000000">a_double</font></b><font color="#990000">(</font><font color="#993399">3.0</font> <font color="#990000">/</font> <font color="#993399">2.0</font> <font color="#990000">)</font> <font color="#990000">);</font>
     <i><font color="#9A1900">// -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// pow</font></i>
     <font color="#008080">a_double</font> a8 <font color="#990000">=</font> cppad_py<font color="#990000">::</font><b><font color="#000000">pow</font></b><font color="#990000">(</font>a2<font color="#990000">,</font> a3<font color="#990000">);</font>
     <font color="#008080">a_double</font> a9 <font color="#990000">=</font> cppad_py<font color="#990000">::</font><b><font color="#000000">pow</font></b><font color="#990000">(</font>a3<font color="#990000">,</font> <font color="#993399">2.0</font><font color="#990000">);</font>
     <font color="#008080">a_double</font> a4 <font color="#990000">=</font> cppad_py<font color="#990000">::</font><b><font color="#000000">pow</font></b><font color="#990000">(</font><font color="#993399">2.0</font><font color="#990000">,</font> a2<font color="#990000">);</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a8<font color="#990000">.</font><b><font color="#000000">near_equal</font></b><font color="#990000">(</font> <b><font color="#000000">a_double</font></b><font color="#990000">(</font><font color="#993399">8.0</font><font color="#990000">)</font> <font color="#990000">);</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a9<font color="#990000">.</font><b><font color="#000000">near_equal</font></b><font color="#990000">(</font> <b><font color="#000000">a_double</font></b><font color="#990000">(</font><font color="#993399">9.0</font><font color="#990000">)</font> <font color="#990000">);</font>
     ok <font color="#990000">=</font> ok <font color="#990000">&amp;&amp;</font> a4<font color="#990000">.</font><b><font color="#000000">near_equal</font></b><font color="#990000">(</font> <b><font color="#000000">a_double</font></b><font color="#990000">(</font><font color="#993399">4.0</font><font color="#990000">)</font> <font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <b><font color="#0000FF">return</font></b><font color="#990000">(</font> ok <font color="#990000">);</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/cplusplus/a_double_binary_xam.cpp

</body>
</html>
