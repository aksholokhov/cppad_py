<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Python: Using Dynamic Parameters: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Python: Using Dynamic Parameters: Example and Test">
<meta name="keywords" id="keywords" content=" python: using dynamic parameters: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_fun_dynamic_xam.py_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_py" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="py_independent.htm" target="_top">Prev</a>
</td><td><a href="py_abort_recording.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_py</option>
<option>library</option>
<option>py_lib</option>
<option>py_fun</option>
<option>py_independent</option>
<option>fun_dynamic_xam.py</option>
</select>
</td>
<td>
<select onchange='choose_down4(this)'>
<option>library-&gt;</option>
<option>py_lib</option>
<option>cpp_lib</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>py_lib-&gt;</option>
<option>py_fun</option>
<option>py_sparse</option>
<option>py_utility</option>
<option>more_py</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>py_fun-&gt;</option>
<option>py_independent</option>
<option>py_abort_recording</option>
<option>py_fun_ctor</option>
<option>py_fun_property</option>
<option>py_fun_new_dynamic</option>
<option>py_fun_jacobian</option>
<option>py_fun_hessian</option>
<option>py_fun_forward</option>
<option>py_fun_reverse</option>
<option>py_fun_optimize</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>py_independent-&gt;</option>
<option>fun_dynamic_xam.py</option>
</select>
</td>
<td>fun_dynamic_xam.py</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@ 

<center><b><big><big>Python: Using Dynamic Parameters: Example and Test</big></big></b></center>
<pre><tt><b><font color="#000080">import</font></b> numpy
<b><font color="#000080">import</font></b> cppad_py
<b><font color="#0000FF">def</font></b> <b><font color="#000000">fun_dynamic_xam</font></b><font color="#990000">()</font> <font color="#990000">:</font>
     ok  <font color="#990000">=</font> True
     nx  <font color="#990000">=</font> <font color="#993399">2</font>
     nd  <font color="#990000">=</font> <font color="#993399">2</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># value of independent variables during recording</font></i>
     x <font color="#990000">=</font> numpy<font color="#990000">.</font><b><font color="#000000">empty</font></b><font color="#990000">(</font>nx<font color="#990000">,</font> dtype<font color="#990000">=</font>float<font color="#990000">)</font>
     x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1.0</font>
     x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">2.0</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># value of independent dynamic parameters during recording</font></i>
     dynamic <font color="#990000">=</font> numpy<font color="#990000">.</font><b><font color="#000000">empty</font></b><font color="#990000">(</font>nd<font color="#990000">,</font> dtype<font color="#990000">=</font>float<font color="#990000">)</font>
     dynamic<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">3.0</font>
     dynamic<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">4.0</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># start recording</font></i>
     <font color="#990000">(</font>ax<font color="#990000">,</font> adynamic<font color="#990000">)</font> <font color="#990000">=</font> cppad_py<font color="#990000">.</font><b><font color="#000000">independent</font></b><font color="#990000">(</font>x<font color="#990000">,</font> dynamic<font color="#990000">)</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># create another dynamic paramerer</font></i>
     adyn  <font color="#990000">=</font> adynamic<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> adynamic<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># create another variable</font></i>
     avar  <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> ax<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">+</font> adyn
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># create f(x) = x[0] + x[1] + dynamic[0] + dynamic[1]</font></i>
     ay    <font color="#990000">=</font> numpy<font color="#990000">.</font><b><font color="#000000">empty</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> dtype<font color="#990000">=</font>cppad_py<font color="#990000">.</font>a_double<font color="#990000">)</font>
     ay<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> avar
     f     <font color="#990000">=</font> cppad_py<font color="#990000">.</font><b><font color="#000000">d_fun</font></b><font color="#990000">(</font>ax<font color="#990000">,</font> ay<font color="#990000">)</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># check some properties of f</font></i>
     ok <font color="#990000">=</font> ok <b><font color="#0000FF">and</font></b> f<font color="#990000">.</font><b><font color="#000000">size_domain</font></b><font color="#990000">()</font> <font color="#990000">==</font> nx
     ok <font color="#990000">=</font> ok <b><font color="#0000FF">and</font></b> f<font color="#990000">.</font><b><font color="#000000">size_order</font></b><font color="#990000">()</font>  <font color="#990000">==</font> <font color="#993399">0</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># zero order forward mode using same values as during the recording</font></i>
     y  <font color="#990000">=</font> cppad_py<font color="#990000">.</font><b><font color="#000000">vec_double</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">)</font>
     y  <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">forward</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> x<font color="#990000">)</font>
     ok <font color="#990000">=</font> ok <b><font color="#0000FF">and</font></b> y<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#990000">(</font>x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">+</font> dynamic<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> dynamic<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">])</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900">#  zero order forward mode using different value for dynamic parameters</font></i>
     dynamic<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> dynamic<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> <font color="#993399">1.0</font>
     dynamic<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> dynamic<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">+</font> <font color="#993399">1.0</font>
     f<font color="#990000">.</font><b><font color="#000000">new_dynamic</font></b><font color="#990000">(</font>dynamic<font color="#990000">)</font>
     y   <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">forward</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> x<font color="#990000">)</font>
     ok  <font color="#990000">=</font> ok <b><font color="#0000FF">and</font></b> y<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#990000">(</font>x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">+</font> dynamic<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> dynamic<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">])</font>
     <i><font color="#9A1900">#</font></i>
     <b><font color="#0000FF">return</font></b> ok</tt></pre>

<hr>Input File: lib/example/python/fun_dynamic_xam.py

</body>
</html>
