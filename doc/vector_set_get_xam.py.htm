<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Python: Setting and Getting Vector Elements: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Python: Setting and Getting Vector Elements: Example and Test">
<meta name="keywords" id="keywords" content=" python: setting getting vector elements: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_vector_set_get_xam.py_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_py" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="vector_set_get_xam.cpp.htm" target="_top">Prev</a>
</td><td><a href="cpp_fun.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_py</option>
<option>library</option>
<option>cpp_lib</option>
<option>vector</option>
<option>vector_set_get</option>
<option>vector_set_get_xam.py</option>
</select>
</td>
<td>
<select onchange='choose_down4(this)'>
<option>library-&gt;</option>
<option>py_lib</option>
<option>cpp_lib</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cpp_lib-&gt;</option>
<option>a_double</option>
<option>vector</option>
<option>cpp_fun</option>
<option>sparse</option>
<option>cpp_utility</option>
<option>more_cpp</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>vector-&gt;</option>
<option>vector_ctor</option>
<option>vector_size</option>
<option>vector_set_get</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>vector_set_get-&gt;</option>
<option>vector_set_get_xam.cpp</option>
<option>vector_set_get_xam.py</option>
</select>
</td>
<td>vector_set_get_xam.py</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@<center><b><big><big>Python: Setting and Getting Vector Elements: Example and Test</big></big></b></center>
<pre><tt><b><font color="#0000FF">def</font></b> <b><font color="#000000">vector_set_get_xam</font></b><font color="#990000">()</font> <font color="#990000">:</font>
     <i><font color="#9A1900">#</font></i>
     <b><font color="#000080">import</font></b> numpy
     <b><font color="#000080">import</font></b> cppad_py
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># initialize return variable</font></i>
     ok <font color="#990000">=</font> True
     <i><font color="#9A1900"># ---------------------------------------------------------------------</font></i>
     n <font color="#990000">=</font> <font color="#993399">4</font>
     bv <font color="#990000">=</font> cppad_py<font color="#990000">.</font><b><font color="#000000">vec_bool</font></b><font color="#990000">(</font>n<font color="#990000">)</font>
     iv <font color="#990000">=</font> cppad_py<font color="#990000">.</font><b><font color="#000000">vec_int</font></b><font color="#990000">(</font>n<font color="#990000">)</font>
     dv <font color="#990000">=</font> numpy<font color="#990000">.</font><b><font color="#000000">empty</font></b><font color="#990000">(</font>n<font color="#990000">,</font> dtype<font color="#990000">=</font>float<font color="#990000">)</font>
     av <font color="#990000">=</font> numpy<font color="#990000">.</font><b><font color="#000000">empty</font></b><font color="#990000">(</font>n<font color="#990000">,</font> dtype<font color="#990000">=</font>cppad_py<font color="#990000">.</font>a_double<font color="#990000">)</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># setting elements</font></i>
     <b><font color="#0000FF">for</font></b> i <b><font color="#0000FF">in</font></b> <b><font color="#000000">range</font></b><font color="#990000">(</font> n  <font color="#990000">)</font> <font color="#990000">:</font>
          bv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> i <font color="#990000">&gt;</font> n <font color="#990000">/</font> <font color="#993399">2</font>
          iv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">2</font> <font color="#990000">*</font> i
          dv<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">3.0</font> <font color="#990000">*</font> i
          av<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> cppad_py<font color="#990000">.</font><b><font color="#000000">a_double</font></b><font color="#990000">(</font><font color="#993399">4.0</font> <font color="#990000">*</font> i<font color="#990000">)</font>
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900">#</font></i>
     <b><font color="#0000FF">for</font></b> i <b><font color="#0000FF">in</font></b> <b><font color="#000000">range</font></b><font color="#990000">(</font> n  <font color="#990000">)</font> <font color="#990000">:</font>
          be <font color="#990000">=</font> bv<font color="#990000">[</font>i<font color="#990000">]</font>
          ok <font color="#990000">=</font> ok <b><font color="#0000FF">and</font></b> be <font color="#990000">==</font> <font color="#990000">(</font>i <font color="#990000">&gt;</font> n <font color="#990000">/</font> <font color="#993399">2</font><font color="#990000">)</font>
          <i><font color="#9A1900">#</font></i>
          ie <font color="#990000">=</font> iv<font color="#990000">[</font>i<font color="#990000">]</font>
          ok <font color="#990000">=</font> ok <b><font color="#0000FF">and</font></b> ie <font color="#990000">==</font> <font color="#993399">2</font> <font color="#990000">*</font> i
          <i><font color="#9A1900">#</font></i>
          de <font color="#990000">=</font> dv<font color="#990000">[</font>i<font color="#990000">]</font>
          ok <font color="#990000">=</font> ok <b><font color="#0000FF">and</font></b> de <font color="#990000">==</font> <font color="#993399">3.0</font> <font color="#990000">*</font> i
          <i><font color="#9A1900">#</font></i>
          ae <font color="#990000">=</font> av<font color="#990000">[</font>i<font color="#990000">]</font>
          ok <font color="#990000">=</font> ok <b><font color="#0000FF">and</font></b> ae <font color="#990000">==</font> <font color="#993399">4.0</font> <font color="#990000">*</font> i
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900">#</font></i>
     <b><font color="#0000FF">return</font></b><font color="#990000">(</font> ok <font color="#990000">)</font>
<i><font color="#9A1900">#</font></i></tt></pre>

<hr>Input File: lib/example/python/vector_set_get_xam.py

</body>
</html>
