<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Configure and Build the cppad_py Python Module</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Configure and Build the cppad_py Python Module">
<meta name="keywords" id="keywords" content=" configure build the cppad_py python module syntax external requirements install using pip errors download top source directory get cppad test c++ import path ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_setup.py_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/cppad_py" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="_contents.htm" target="_top">Prev</a>
</td><td><a href="install_error.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_py</option>
<option>setup.py</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_py_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_setup.py_htm.js'></script>
</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@<center><b><big><big>Configure and Build the cppad_py Python Module</big></big></b></center>

<br><a href="setup.py.htm#Syntax" target="_top">Syntax</a>
<br><a href="setup.py.htm#External Requirements" target="_top">External&nbsp;Requirements</a>
<br><a href="setup.py.htm#Install Using Pip" target="_top">Install&nbsp;Using&nbsp;Pip</a>
<br><a href="setup.py.htm#Install Errors" target="_top">Install&nbsp;Errors</a>
<br><a href="setup.py.htm#Download" target="_top">Download</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="setup.py.htm#Download.Top Source Directory" target="_top">Top&nbsp;Source&nbsp;Directory</a>
<br><a href="setup.py.htm#Configure" target="_top">Configure</a>
<br><a href="setup.py.htm#Get cppad" target="_top">Get&nbsp;cppad</a>
<br><a href="setup.py.htm#Test" target="_top">Test</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="setup.py.htm#Test.Build cppad_py" target="_top">Build&nbsp;cppad_py</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="setup.py.htm#Test.python" target="_top">python</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="setup.py.htm#Test.c++" target="_top">c++</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="setup.py.htm#Test.import" target="_top">import</a>
<br><a href="setup.py.htm#Install" target="_top">Install</a>
<br><a href="setup.py.htm#Python Path" target="_top">Python&nbsp;Path</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>python&nbsp;setup.py&nbsp;build_ext&nbsp;[--debug]<br>
</span></font></code>
<br>
<b><big><a name="External Requirements" id="External Requirements">External Requirements</a></big></b>

<ol type="1"><li>
<a href="https://www.python.org/" target="_top"><span style='white-space: nowrap'>python</span></a>
 version 3.
</li><li>

<a href="https://en.wikipedia.org/wiki/Bash_(Unix_shell)" target="_top"><span style='white-space: nowrap'>bash</span></a>

</li><li>

<a href="https://en.wikipedia.org/wiki/C++" target="_top"><span style='white-space: nowrap'>c++</span></a>
.
</li><li>

<a href="https://cmake.org" target="_top"><span style='white-space: nowrap'>cmake</span></a>

</li><li>

<a href="https://git-scm.com/" target="_top"><span style='white-space: nowrap'>git</span></a>
.
</li><li>

<a href="http://www.swig.org/" target="_top"><span style='white-space: nowrap'>swig</span></a>
:
<a href="https://github.com/bradbell/cppad_py/issues/3" target="_top"><span style='white-space: nowrap'>issue&nbsp;3</span></a>
.
</li><li>

<a href="http://www.numpy.org/" target="_top"><span style='white-space: nowrap'>numpy</span></a>
.
</li></ol>


<br>
<br>
<b><big><a name="Install Using Pip" id="Install Using Pip">Install Using Pip</a></big></b>
<br>
There is a preliminary version of cppad_py available using <code><font color="blue">pip</font></code>.
To install for you entire system use:
<code><font color='blue'><pre style='display:inline'> 
     pip install -i https://test.pypi.org/simple/ cppad_py
</pre></font></code>
<br>
<b><big><a name="Install Errors" id="Install Errors">Install Errors</a></big></b>
<br>
If you get an error message during the install procedure above,
or the one below, see <a href="install_error.htm" target="_top"><span style='white-space: nowrap'>install_error</span></a>
.
This will only install the release version.
Installing a debug version is discussed below in the instructions
for downloading and building from the source code.

<br>
<br>
<b><big><a name="Download" id="Download">Download</a></big></b>
<br>
Use the following command to download the current version of cppad_py:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git&nbsp;clone&nbsp;https://github.com/bradbell/cppad_py.git&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>top_srcdir</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
<br>
<big><a name="Download.Top Source Directory" id="Download.Top Source Directory">Top Source Directory</a></big>
<br>
The directory you choose for 
<code><i><font color="black"><span style='white-space: nowrap'>top_srcdir</span></font></i></code>
 is
referred to as your top source directory.

<br>
<br>
<b><big><a name="Configure" id="Configure">Configure</a></big></b>
<br>
Before running <code><font color="blue">setup.py</font></code> or <code><font color="blue">bin/get_cppad.sh</font></code>,
you should check and possibly change the
<a href="get_cppad.sh.htm#Settings" target="_top"><span style='white-space: nowrap'>settings</span></a>
 in <code><font color="blue">bin/get_cppad.sh</font></code>.

<br>
<br>
<b><big><a name="Get cppad" id="Get cppad">Get cppad</a></big></b>
<br>
The next step is to get a copy of cppad using <a href="get_cppad.sh.htm" target="_top"><span style='white-space: nowrap'>get_cppad.sh</span></a>
.

<br>
<br>
<b><big><a name="Test" id="Test">Test</a></big></b>
<br>
These steps are optional if you already know that cppad_py
works on your system.

<br>
<br>
<big><a name="Test.Build cppad_py" id="Test.Build cppad_py">Build cppad_py</a></big>
<br>
Build the Python cppad_py module using the command:
If <a href="get_cppad.sh.htm#Settings.build_type" target="_top"><span style='white-space: nowrap'>build_type</span></a>
 is <code><font color="blue">debug</font></code>

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;python&nbsp;setup.py&nbsp;build_ext&nbsp;--debug<br>
</span></font></code>
otherwise use

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;python&nbsp;setup.py&nbsp;build_ext<br>
</span></font></code>
<br>
<big><a name="Test.python" id="Test.python">python</a></big>
<br>
The next step is to test the cppad_py on your system by executing
the following commands starting in 
<code><i><font color="black"><span style='white-space: nowrap'>top_srcdir</span></font></i></code>
:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cd&nbsp;example/python<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;python&nbsp;check_all.py<br>
</span></font></code>
<br>
<big><a name="Test.c++" id="Test.c++">c++</a></big>
<br>
You can also test the cppad_py c++ interface
<a href="cpp_lib.htm" target="_top"><span style='white-space: nowrap'>cpp_lib</span></a>
 on your system by executing the following commands
starting in 
<code><i><font color="black"><span style='white-space: nowrap'>top_srcdir</span></font></i></code>
:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cd&nbsp;build<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmake&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-D&nbsp;CMAKE_BUILD_TYPE=</span></font><i><font color="black"><span style='white-space: nowrap'>build_type</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-D&nbsp;cppad_prefix=</span></font><i><font color="black"><span style='white-space: nowrap'>cppad_prefix</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-D&nbsp;extra_cxx_flags=</span></font><i><font color="black"><span style='white-space: nowrap'>extra_cxx_flags</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;make&nbsp;check_lib_cplusplus<br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>build_type</span></font></i></code>
 is <code><font color="blue">debug</font></code> or <code><font color="blue">release</font></code>,

<code><i><font color="black"><span style='white-space: nowrap'>cppad_prefix</span></font></i></code>
 is the prefix where 
<code><i><font color="black"><span style='white-space: nowrap'>cppad</span></font></i></code>
 is installed,
and 
<code><i><font color="black"><span style='white-space: nowrap'>extra_cxx_flags</span></font></i></code>
 are extra flags to use when running the
c++ compiler. Note that 
<code><i><font color="black"><span style='white-space: nowrap'>cppad_prefix</span></font></i></code>
 is relative to the

<code><i><font color="black"><span style='white-space: nowrap'>top_srcdir</span></font></i></code>
 directory not the build directory.

<br>
<br>
<big><a name="Test.import" id="Test.import">import</a></big>
<br>
If you are in the 
<code><i><font color="black"><span style='white-space: nowrap'>top_srcdir</span></font></i></code>
 directory,
you should be able to import cppad_py using the following commands:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;python<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;cppad_py<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quit()<br>
</span></font></code>
We need to install cppad_py so you can import it from any directory.


<br>
<br>
<b><big><a name="Install" id="Install">Install</a></big></b>
<br>
Use the following command to build and install the debug version of cppad_py:
If <a href="get_cppad.sh.htm#Settings.build_type" target="_top"><span style='white-space: nowrap'>build_type</span></a>
 is <code><font color="blue">debug</font></code>

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;python&nbsp;setup.py&nbsp;build_ext&nbsp;--debug&nbsp;install&nbsp;--prefix=</span></font><i><font color="black"><span style='white-space: nowrap'>prefix</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
otherwise use

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;python&nbsp;setup.py&nbsp;build_ext&nbsp;install&nbsp;--prefix=</span></font><i><font color="black"><span style='white-space: nowrap'>prefix</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
This will install <code><font color="blue">cppad_py</font></code> in the directory

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>prefix</span></font></i><font color="blue"><span style='white-space: nowrap'>/</span></font><i><font color="black"><span style='white-space: nowrap'>lib</span></font></i><font color="blue"><span style='white-space: nowrap'>/python</span></font><i><font color="black"><span style='white-space: nowrap'>major</span></font></i><font color="blue"><span style='white-space: nowrap'>.</span></font><i><font color="black"><span style='white-space: nowrap'>minor</span></font></i><font color="blue"><span style='white-space: nowrap'>/site_packages/cppad_py<br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>lib</span></font></i></code>
 is <code><font color="blue">lib</font></code> or <code><font color="blue">lib64</font></code>,

<code><i><font color="black"><span style='white-space: nowrap'>major</span></font></i></code>
 (
<code><i><font color="black"><span style='white-space: nowrap'>minor</span></font></i></code>
) is the major (minor)
version of 
<code><i><font color="black"><span style='white-space: nowrap'>python</span></font></i></code>
.

<br>
<br>
<b><big><a name="Python Path" id="Python Path">Python Path</a></big></b>
<br>
Check that the directory

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>prefix</span></font></i><font color="blue"><span style='white-space: nowrap'>/</span></font><i><font color="black"><span style='white-space: nowrap'>lib</span></font></i><font color="blue"><span style='white-space: nowrap'>/python</span></font><i><font color="black"><span style='white-space: nowrap'>major</span></font></i><font color="blue"><span style='white-space: nowrap'>.</span></font><i><font color="black"><span style='white-space: nowrap'>minor</span></font></i><font color="blue"><span style='white-space: nowrap'>/site_packages<br>
</span></font></code>
is in your python path.
Once it is, you should be able to execute the following commands:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;python<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;sys<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(sys.path)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quit()<br>
</span></font></code>

<hr>Input File: setup.py

</body>
</html>
