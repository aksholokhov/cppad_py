<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>A Susceptible Exposed Infectious Recovered Model</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="A Susceptible Exposed Infectious Recovered Model">
<meta name="keywords" id="keywords" content=" susceptible exposed infectious recovered model syntax ode set_t_all set_ode_p set_initial example source code ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_numeric_seirs_class_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/cppad_py" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="numeric_optimize_fun_xam.py.htm" target="_top">Prev</a>
</td><td><a href="numeric_seirs_fit_xam.py.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_py</option>
<option>numeric_xam</option>
<option>numeric_seirs_class</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_py_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_numeric_xam_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_numeric_seirs_class_htm.js'></script>
</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@<center><b><big><big>A Susceptible Exposed Infectious Recovered Model</big></big></b></center>

<br><a href="numeric_seirs_class.htm#Syntax" target="_top">Syntax</a>
<br><a href="numeric_seirs_class.htm#ODE" target="_top">ODE</a>
<br><a href="numeric_seirs_class.htm#set_t_all" target="_top">set_t_all</a>
<br><a href="numeric_seirs_class.htm#set_ode_p" target="_top">set_ode_p</a>
<br><a href="numeric_seirs_class.htm#set_initial" target="_top">set_initial</a>
<br><a href="numeric_seirs_class.htm#model" target="_top">model</a>
<br><a href="numeric_seirs_class.htm#Example" target="_top">Example</a>
<br><a href="numeric_seirs_class.htm#Source Code" target="_top">Source&nbsp;Code</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>seirs</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;seirs_class()<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>seirs</span></font></i><font color="blue"><span style='white-space: nowrap'>.set_t_all(</span></font><i><font color="black"><span style='white-space: nowrap'>t_all</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>seirs</span></font></i><font color="blue"><span style='white-space: nowrap'>.set_ode_p(</span></font><i><font color="black"><span style='white-space: nowrap'>ode_p</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>seirs</span></font></i><font color="blue"><span style='white-space: nowrap'>.set_initial(</span></font><i><font color="black"><span style='white-space: nowrap'>initial</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>seir_all</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>seirs</span></font></i><font color="blue"><span style='white-space: nowrap'>.model()<br>
</span></font></code>
<br>
<b><big><a name="ODE" id="ODE">ODE</a></big></b>
<br>
The ordinary differential equation for this model is:
<small>@[@

\begin{array}{rcl}
\dot{S}(t) & = & - \beta(t) S(t) I(t) + \xi R(t)    \\
\dot{E}(t) & = & + \beta(t) S(t) I(t) - \sigma E(t) \\
\dot{I}(t) & = & + \sigma E(t)        - \gamma  I(t) \\
\dot{R}(t) & = & + \gamma I(t)        - \xi R(t)
\end{array}

@]@</small>

<br>
<br>
<b><big><a name="set_t_all" id="set_t_all">set_t_all</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>t_all</span></font></i></code>
 is a vector that is monotone
increasing or decreasing.
The smaller the spacing between time points, the more accurate
the approximation is.

<br>
<br>
<b><big><a name="set_ode_p" id="set_ode_p">set_ode_p</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>ode_p</span></font></i></code>
 is a vector of length four
containing the ODE parameters in the following order:
<small>@(@
\beta, \sigma, \gamma, \xi
@)@</small>.

<br>
<br>
<b><big><a name="set_initial" id="set_initial">set_initial</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>initial</span></font></i></code>
 is a vector of length four
containing the initial compartment values in the following order:
<small>@(@
S, E, I, R
@)@</small>.

<br>
<br>
<b><big><a name="model" id="model">model</a></big></b>
<br>
Given all of the settings above, this function computes an
approximate solution of the ODE.
The return value 
<code><i><font color="black"><span style='white-space: nowrap'>seir_all</span></font></i></code>
 is a numpy matrix with row dimension
equal to the number of elements in 
<code><i><font color="black"><span style='white-space: nowrap'>t_all</span></font></i></code>
 and column dimension
equal to four. The value 
<code><i><font color="black"><span style='white-space: nowrap'>seir_all</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 is the
approximate solution for the j-th compartment at time 
<code><i><font color="black"><span style='white-space: nowrap'>t_all</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
.
The compartments have the same order as in 
<code><i><font color="black"><span style='white-space: nowrap'>initial</span></font></i></code>
 and

<code><font color="blue"></font><i><font color="black"><span style='white-space: nowrap'>seir</span></font></i><font color="blue"><span style='white-space: nowrap'>[0,:]</span></font></code>
 is equal to 
<code><i><font color="black"><span style='white-space: nowrap'>initial</span></font></i></code>
.
The sequence of floating point operations only depends on 
<code><i><font color="black"><span style='white-space: nowrap'>t_all</span></font></i></code>
;
i.e., cppad_py functions that depend on the model results can be used
for different values of 
<code><i><font color="black"><span style='white-space: nowrap'>ode_p</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>initial</span></font></i></code>
.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>

<br>
<a href="numeric_seirs_fit_xam.py.htm" target="_top"><span style='white-space: nowrap'>numeric_seirs_fit_xam.py</span></a>


<br>
<br>
<b><big><a name="Source Code" id="Source Code">Source Code</a></big></b>

<pre><tt>
<b><font color="#000080">import</font></b> numpy
<b><font color="#000080">import</font></b> runge4
<b><font color="#0000FF">class</font></b> seirs_class <font color="#990000">:</font>
     <i><font color="#9A1900">#</font></i>
     <b><font color="#0000FF">def</font></b> <b><font color="#000000">set_t_all</font></b><font color="#990000">(</font>self<font color="#990000">,</font> t_all<font color="#990000">)</font> <font color="#990000">:</font>
          self<font color="#990000">.</font>t_all <font color="#990000">=</font> t_all
     <i><font color="#9A1900">#</font></i>
     <b><font color="#0000FF">def</font></b> <b><font color="#000000">set_ode_p</font></b><font color="#990000">(</font>self<font color="#990000">,</font> ode_p<font color="#990000">)</font> <font color="#990000">:</font>
          self<font color="#990000">.</font>ode_p <font color="#990000">=</font> ode_p
     <i><font color="#9A1900">#</font></i>
     <b><font color="#0000FF">def</font></b> <b><font color="#000000">set_initial</font></b><font color="#990000">(</font>self<font color="#990000">,</font> initial<font color="#990000">)</font> <font color="#990000">:</font>
          self<font color="#990000">.</font>initial <font color="#990000">=</font> initial
     <i><font color="#9A1900">#</font></i>
     <b><font color="#0000FF">def</font></b> <b><font color="#000000">model</font></b><font color="#990000">(</font>self<font color="#990000">)</font> <font color="#990000">:</font>
          seir_all     <font color="#990000">=</font> runge4<font color="#990000">.</font><b><font color="#000000">multi_step</font></b><font color="#990000">(</font>self<font color="#990000">.</font>ode<font color="#990000">,</font> self<font color="#990000">.</font>t_all<font color="#990000">,</font> self<font color="#990000">.</font>initial<font color="#990000">)</font>
          <b><font color="#0000FF">return</font></b> seir_all
     <i><font color="#9A1900">#</font></i>
     <i><font color="#9A1900"># private member fuction (not part of class API)</font></i>
     <b><font color="#0000FF">def</font></b> <b><font color="#000000">ode</font></b><font color="#990000">(</font>self<font color="#990000">,</font> t<font color="#990000">,</font> seir<font color="#990000">)</font> <font color="#990000">:</font>
          S      <font color="#990000">=</font> seir<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>
          E      <font color="#990000">=</font> seir<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font>
          I      <font color="#990000">=</font> seir<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font>
          R      <font color="#990000">=</font> seir<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font>
          beta   <font color="#990000">=</font> self<font color="#990000">.</font>ode_p<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>
          sigma  <font color="#990000">=</font> self<font color="#990000">.</font>ode_p<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font>
          gamma  <font color="#990000">=</font> self<font color="#990000">.</font>ode_p<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font>
          xi     <font color="#990000">=</font> self<font color="#990000">.</font>ode_p<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font>
          Sdot   <font color="#990000">=</font> <font color="#990000">-</font> beta <font color="#990000">*</font> S <font color="#990000">*</font> I <font color="#990000">+</font> xi <font color="#990000">*</font> R
          Edot   <font color="#990000">=</font> <font color="#990000">+</font> beta <font color="#990000">*</font> S <font color="#990000">*</font> I <font color="#990000">-</font> sigma <font color="#990000">*</font> E
          Idot   <font color="#990000">=</font> <font color="#990000">+</font> sigma <font color="#990000">*</font> E    <font color="#990000">-</font> gamma <font color="#990000">*</font> I
          Rdot   <font color="#990000">=</font> <font color="#990000">+</font> gamma <font color="#990000">*</font> I    <font color="#990000">-</font> xi <font color="#990000">*</font> R
          <b><font color="#0000FF">return</font></b> numpy<font color="#990000">.</font><b><font color="#000000">array</font></b><font color="#990000">([</font> Sdot<font color="#990000">,</font> Edot<font color="#990000">,</font> Idot<font color="#990000">,</font> Rdot<font color="#990000">])</font></tt></pre>

<hr>Input File: example/python/numeric/seirs_class.py

</body>
</html>
