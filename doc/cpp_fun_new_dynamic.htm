<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Change The Dynamic Parameters</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Change The Dynamic Parameters">
<meta name="keywords" id="keywords" content=" change the dynamic parameters syntax f size_order example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_cpp_fun_new_dynamic_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_py" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="fun_property_xam.cpp.htm" target="_top">Prev</a>
</td><td><a href="cpp_fun_jacobian.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_py</option>
<option>library</option>
<option>cpp_lib</option>
<option>cpp_fun</option>
<option>cpp_fun_new_dynamic</option>
</select>
</td>
<td>
<select onchange='choose_down4(this)'>
<option>cppad_py-&gt;</option>
<option>setup.py</option>
<option>library</option>
<option>whats_new_2018</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>library-&gt;</option>
<option>py_lib</option>
<option>cpp_lib</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>cpp_lib-&gt;</option>
<option>a_double</option>
<option>vector</option>
<option>cpp_fun</option>
<option>sparse</option>
<option>cpp_utility</option>
<option>more_cpp</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>cpp_fun-&gt;</option>
<option>cpp_independent</option>
<option>cpp_abort_recording</option>
<option>cpp_fun_ctor</option>
<option>cpp_fun_property</option>
<option>cpp_fun_new_dynamic</option>
<option>cpp_fun_jacobian</option>
<option>cpp_fun_hessian</option>
<option>cpp_fun_forward</option>
<option>cpp_fun_reverse</option>
<option>cpp_fun_optimize</option>
</select>
</td>
<td>cpp_fun_new_dynamic</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>f</option>
<option>dynamic</option>
<option>size_order</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@


<center><b><big><big>Change The Dynamic Parameters</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.new_dynamic(</span></font><i><font color="black"><span style='white-space: nowrap'>dynamic</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><big><a name="f" id="f">f</a></big></b>
<br>
This is either a
<a href="cpp_fun_ctor.htm#Syntax.d_fun" target="_top"><span style='white-space: nowrap'>d_fun</span></a>
 or
<a href="cpp_fun_ctor.htm#Syntax.a_fun" target="_top"><span style='white-space: nowrap'>a_fun</span></a>
 function object.

<br>
<br>
<b><big><a name="dynamic" id="dynamic">dynamic</a></big></b>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 is a <code><font color="blue">d_fun</font></code> or <code><font color="blue">a_fun</font></code>,
this argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;vec_double&amp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dynamic</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;vec_a_double&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dynamic</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and its size must be the same as the size of
<a href="cpp_independent.htm#dynamic" target="_top"><span style='white-space: nowrap'>dynamic</span></a>
 in the corresponding call to
<code><font color="blue">independent</font></code>.
It specifies new values for the dynamic parameters in 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
.

<br>
<br>
<b><big><a name="size_order" id="size_order">size_order</a></big></b>
<br>
After this call
<a href="cpp_fun_property.htm#size_order" target="_top"><span style='white-space: nowrap'>f.size_order()</span></a>
 is zero.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
See <a href="fun_dynamic_xam.cpp.htm" target="_top"><span style='white-space: nowrap'>fun_dynamic_xam.cpp</span></a>
.

<hr>Input File: lib/cplusplus/fun.cpp

</body>
</html>
