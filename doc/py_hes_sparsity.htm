<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Hessian Sparsity Patterns</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Hessian Sparsity Patterns">
<meta name="keywords" id="keywords" content=" hessian sparsity patterns syntax purpose x f select_domain select_range pattern_out component wise example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_py_hes_sparsity_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/cppad_py" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="sparse_jac_pattern_xam.py.htm" target="_top">Prev</a>
</td><td><a href="sparse_hes_pattern_xam.py.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_py</option>
<option>library</option>
<option>py_lib</option>
<option>py_sparse</option>
<option>py_hes_sparsity</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_py_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_library_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_py_lib_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_py_sparse_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_py_hes_sparsity_htm.js'></script>
</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@<center><b><big><big>Hessian Sparsity Patterns</big></big></b></center>

<br><a href="py_hes_sparsity.htm#Syntax" target="_top">Syntax</a>
<br><a href="py_hes_sparsity.htm#Purpose" target="_top">Purpose</a>
<br><a href="py_hes_sparsity.htm#x" target="_top">x</a>
<br><a href="py_hes_sparsity.htm#f" target="_top">f</a>
<br><a href="py_hes_sparsity.htm#select_domain" target="_top">select_domain</a>
<br><a href="py_hes_sparsity.htm#select_range" target="_top">select_range</a>
<br><a href="py_hes_sparsity.htm#pattern_out" target="_top">pattern_out</a>
<br><a href="py_hes_sparsity.htm#Sparsity for Component Wise Hessian" target="_top">Sparsity&nbsp;for&nbsp;Component&nbsp;Wise&nbsp;Hessian</a>
<br><a href="py_hes_sparsity.htm#Example" target="_top">Example</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.for_hes_sparsity(</span></font><i><font color="black"><span style='white-space: nowrap'>select_domain</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>select_range</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>pattern_out</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.rev_hes_sparsity(</span></font><i><font color="black"><span style='white-space: nowrap'>select_domain</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>select_range</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>pattern_out</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
We use <small>@(@
F : \B{R}^n \rightarrow \B{R}^m
@)@</small> to denote the
function corresponding to the operation sequence stored in 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
.
Fix a diagonal matrix <small>@(@
D \in \B{R}^{n \times n}
@)@</small>, fix a vector
<small>@(@
r \in \B{R}^m
@)@</small>, and define
<small>@[@

	H(x) = D (r^\R{T} F)^{(2)} ( x ) D

@]@</small>
Given a sparsity pattern for <small>@(@
D
@)@</small> and <small>@(@
r
@)@</small>,
these routines compute a sparsity pattern for <small>@(@
H(x)
@)@</small>.

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
Note that a sparsity pattern for <small>@(@
H(x)
@)@</small> corresponds to the
operation sequence stored in 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 and does not depend on
the argument 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
.

<br>
<br>
<b><big><a name="f" id="f">f</a></big></b>
<br>
This object must have been returned by a previous call to the python
<a href="py_fun_ctor.htm" target="_top"><span style='white-space: nowrap'>d_fun</span></a>
 constructor.

<br>
<br>
<b><big><a name="select_domain" id="select_domain">select_domain</a></big></b>
<br>
The argument is a numpy vector with <code><font color="blue">bool</font></code> elements.
It has size 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
 and is a sparsity pattern for the diagonal of
<small>@(@
D
@)@</small>; i.e., 
<code><i><font color="black"><span style='white-space: nowrap'>select_domain</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 is true if and only if
<small>@(@
D_{j,j}
@)@</small> is possibly non-zero.

<br>
<br>
<b><big><a name="select_range" id="select_range">select_range</a></big></b>
<br>
The argument is a numpy vector with <code><font color="blue">bool</font></code> elements.
It has size 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i></code>
 and is a sparsity pattern for the vector
<small>@(@
r
@)@</small>; i.e., 
<code><i><font color="black"><span style='white-space: nowrap'>select_range</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 is true if and only if
<small>@(@
r_i
@)@</small> is possibly non-zero.

<br>
<br>
<b><big><a name="pattern_out" id="pattern_out">pattern_out</a></big></b>
<br>
This argument must have be a <a href="py_sparse_rc.htm#pattern" target="_top"><span style='white-space: nowrap'>pattern</span></a>

returned by the <code><font color="blue">sparse_rc</font></code> constructor.
This input value of 
<code><i><font color="black"><span style='white-space: nowrap'>pattern_out</span></font></i></code>
 does not matter.
Upon return 
<code><i><font color="black"><span style='white-space: nowrap'>pattern_out</span></font></i></code>
 is a sparsity pattern for
<small>@(@
H(x)
@)@</small>.

<br>
<br>
<b><big><a name="Sparsity for Component Wise Hessian" id="Sparsity for Component Wise Hessian">Sparsity for Component Wise Hessian</a></big></b>
<br>
Suppose that <small>@(@
D
@)@</small> is the identity matrix,
and only the <code><i>i</i></code>-th component of 
<code><i><font color="black"><span style='white-space: nowrap'>r</span></font></i></code>
 is possibly non-zero.
In this case, 
<code><i><font color="black"><span style='white-space: nowrap'>pattern_out</span></font></i></code>
 is a sparsity pattern for
<small>@(@
F_i^{(2)} ( x )
@)@</small>.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>

<br>
<a href="sparse_hes_pattern_xam.py.htm" target="_top"><span style='white-space: nowrap'>Python</span></a>



<hr>Input File: lib/python/hes_sparsity.py

</body>
</html>
