<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Alphabetic Listing of Cross Reference Tags</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Alphabetic Listing of Cross Reference Tags">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='__reference_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_py" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="whats_new_2018.htm" target="_top">Prev</a>
</td><td><a href="_index.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_py</option>
<option>_reference</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>cppad_py-&gt;</option>
<option>setup.py</option>
<option>library</option>
<option>whats_new_2018</option>
</select>
</td>
<td>_reference</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>A</option>
<option>C</option>
<option>E</option>
<option>F</option>
<option>G</option>
<option>L</option>
<option>M</option>
<option>N</option>
<option>P</option>
<option>S</option>
<option>V</option>
<option>W</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>Alphabetic Listing of Cross Reference Tags</big></big></b></center>
<table>
<tr valign="top"><td>

<b><big><a name="A">A</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="a_double.htm" target="_top">a_double</a><br> </td><td> Cppad Py AD Scalars </td></tr><tr valign="top"><td>
<a href="a_double_assign.htm" target="_top">a_double_assign</a><br> </td><td> a_double Assignment Operators </td></tr><tr valign="top"><td>
<a href="a_double_assign_xam.cpp.htm" target="_top">a_double_assign_xam.cpp</a><br> </td><td> C++: a_double Assignment Operators: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_assign_xam.py.htm" target="_top">a_double_assign_xam.py</a><br> </td><td> Python: a_double Assignment Operators: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_binary.htm" target="_top">a_double_binary</a><br> </td><td> a_double Binary Operators with an AD Result </td></tr><tr valign="top"><td>
<a href="a_double_binary_xam.cpp.htm" target="_top">a_double_binary_xam.cpp</a><br> </td><td> C++: a_double Binary Operators With AD Result: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_binary_xam.py.htm" target="_top">a_double_binary_xam.py</a><br> </td><td> Python: a_double Binary Operators With AD Result: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_compare.htm" target="_top">a_double_compare</a><br> </td><td> a_double Comparison Operators </td></tr><tr valign="top"><td>
<a href="a_double_compare_xam.cpp.htm" target="_top">a_double_compare_xam.cpp</a><br> </td><td> C++: a_double Comparison Operators: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_compare_xam.py.htm" target="_top">a_double_compare_xam.py</a><br> </td><td> Python: a_double Comparison Operators: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_cond_assign.htm" target="_top">a_double_cond_assign</a><br> </td><td> AD Conditional Assignment </td></tr><tr valign="top"><td>
<a href="a_double_cond_assign_xam.cpp.htm" target="_top">a_double_cond_assign_xam.cpp</a><br> </td><td> C++: a_double Conditional Assignment: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_cond_assign_xam.py.htm" target="_top">a_double_cond_assign_xam.py</a><br> </td><td> Python: a_double Conditional Assignment: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_ctor.htm" target="_top">a_double_ctor</a><br> </td><td> The a_double Constructor </td></tr><tr valign="top"><td>
<a href="a_double_property.htm" target="_top">a_double_property</a><br> </td><td> Properties of an a_double Object </td></tr><tr valign="top"><td>
<a href="a_double_property_xam.cpp.htm" target="_top">a_double_property_xam.cpp</a><br> </td><td> C++: a_double Properties: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_property_xam.py.htm" target="_top">a_double_property_xam.py</a><br> </td><td> Python: a_double Properties: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_unary_fun.htm" target="_top">a_double_unary_fun</a><br> </td><td> Unary Functions with AD Result </td></tr><tr valign="top"><td>
<a href="a_double_unary_fun_xam.cpp.htm" target="_top">a_double_unary_fun_xam.cpp</a><br> </td><td> C++: a_double Unary Functions with AD Result: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_unary_fun_xam.py.htm" target="_top">a_double_unary_fun_xam.py</a><br> </td><td> Python: a_double Unary Functions with AD Result: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_unary_op.htm" target="_top">a_double_unary_op</a><br> </td><td> a_double Unary Plus and Minus </td></tr><tr valign="top"><td>
<a href="a_double_unary_op_xam.cpp.htm" target="_top">a_double_unary_op_xam.cpp</a><br> </td><td> C++: a_double Unary Plus and Minus: Example and Test </td></tr><tr valign="top"><td>
<a href="a_double_unary_op_xam.py.htm" target="_top">a_double_unary_op_xam.py</a><br> </td><td> Python: a_double Unary Plus and Minus: Example and Test </td></tr><tr valign="top"><td>
<a href="a_fun_xam.py.htm" target="_top">a_fun_xam.py</a><br> </td><td> Python: Purpose of a_fun Objects: Example and Test </td></tr><tr valign="top"><td>

<b><big><a name="C">C</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="cpp_abort_recording.htm" target="_top">cpp_abort_recording</a><br> </td><td> Abort Recording </td></tr><tr valign="top"><td>
<a href="cpp_fun.htm" target="_top">cpp_fun</a><br> </td><td> Cppad Py AD Functions </td></tr><tr valign="top"><td>
<a href="cpp_fun_ctor.htm" target="_top">cpp_fun_ctor</a><br> </td><td> Stop Current Recording and Store Function Object </td></tr><tr valign="top"><td>
<a href="cpp_fun_forward.htm" target="_top">cpp_fun_forward</a><br> </td><td> Forward Mode AD </td></tr><tr valign="top"><td>
<a href="cpp_fun_hessian.htm" target="_top">cpp_fun_hessian</a><br> </td><td> Hessian of an AD Function </td></tr><tr valign="top"><td>
<a href="cpp_fun_jacobian.htm" target="_top">cpp_fun_jacobian</a><br> </td><td> Jacobian of an AD Function </td></tr><tr valign="top"><td>
<a href="cpp_fun_new_dynamic.htm" target="_top">cpp_fun_new_dynamic</a><br> </td><td> Change The Dynamic Parameters </td></tr><tr valign="top"><td>
<a href="cpp_fun_optimize.htm" target="_top">cpp_fun_optimize</a><br> </td><td> Optimize an AD Function </td></tr><tr valign="top"><td>
<a href="cpp_fun_property.htm" target="_top">cpp_fun_property</a><br> </td><td> Properties of a Function Object </td></tr><tr valign="top"><td>
<a href="cpp_fun_reverse.htm" target="_top">cpp_fun_reverse</a><br> </td><td> Reverse Mode AD </td></tr><tr valign="top"><td>
<a href="cpp_independent.htm" target="_top">cpp_independent</a><br> </td><td> Declare Independent Variables and Start Recording </td></tr><tr valign="top"><td>
<a href="cpp_jac_sparsity.htm" target="_top">cpp_jac_sparsity</a><br> </td><td> Jacobian Sparsity Patterns </td></tr><tr valign="top"><td>
<a href="cpp_lib.htm" target="_top">cpp_lib</a><br> </td><td> The C++ Library </td></tr><tr valign="top"><td>
<a href="cpp_sparse_hes.htm" target="_top">cpp_sparse_hes</a><br> </td><td> Computing Sparse Hessians </td></tr><tr valign="top"><td>
<a href="cpp_sparse_jac.htm" target="_top">cpp_sparse_jac</a><br> </td><td> Computing Sparse Jacobians </td></tr><tr valign="top"><td>
<a href="cpp_sparse_rc.htm" target="_top">cpp_sparse_rc</a><br> </td><td> Sparsity Patterns </td></tr><tr valign="top"><td>
<a href="cpp_sparse_rcv.htm" target="_top">cpp_sparse_rcv</a><br> </td><td> Sparse Matrices </td></tr><tr valign="top"><td>
<a href="cpp_sparsity.htm" target="_top">cpp_sparsity</a><br> </td><td> Hessian Sparsity Patterns </td></tr><tr valign="top"><td>
<a href="cpp_utility.htm" target="_top">cpp_utility</a><br> </td><td> C++ Utilities </td></tr><tr valign="top"><td>
<a href="cppad_py.htm" target="_top">cppad_py</a><br> </td><td> cppad_py-20181110: A C++ Object Library and Python Interface to Cppad </td></tr><tr valign="top"><td>

<b><big><a name="E">E</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="error_message.htm" target="_top">error_message</a><br> </td><td> Exception Handling </td></tr><tr valign="top"><td>
<a href="error_message_xam.cpp.htm" target="_top">error_message_xam.cpp</a><br> </td><td> C++: Cppad Py Exception Handling: Example and Test </td></tr><tr valign="top"><td>
<a href="error_message_xam.py.htm" target="_top">error_message_xam.py</a><br> </td><td> Python: Cppad Py Exception Handling: Example and Test </td></tr><tr valign="top"><td>

<b><big><a name="F">F</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="fun_abort_xam.cpp.htm" target="_top">fun_abort_xam.cpp</a><br> </td><td> C++: Abort Recording a_double Operations: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_abort_xam.py.htm" target="_top">fun_abort_xam.py</a><br> </td><td> Python: Abort Recording a_double Operations: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_dynamic_xam.cpp.htm" target="_top">fun_dynamic_xam.cpp</a><br> </td><td> C++: Using Dynamic Parameters: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_dynamic_xam.py.htm" target="_top">fun_dynamic_xam.py</a><br> </td><td> Python: Using Dynamic Parameters: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_forward_xam.cpp.htm" target="_top">fun_forward_xam.cpp</a><br> </td><td> C++: Forward Mode AD: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_forward_xam.py.htm" target="_top">fun_forward_xam.py</a><br> </td><td> Python: Forward Mode AD: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_hessian_xam.cpp.htm" target="_top">fun_hessian_xam.cpp</a><br> </td><td> C++: Dense Hessian Using AD: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_hessian_xam.py.htm" target="_top">fun_hessian_xam.py</a><br> </td><td> Python: Dense Hessian Using AD: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_jacobian_xam.cpp.htm" target="_top">fun_jacobian_xam.cpp</a><br> </td><td> C++: Dense Jacobian Using AD: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_jacobian_xam.py.htm" target="_top">fun_jacobian_xam.py</a><br> </td><td> Python: Dense Jacobian Using AD: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_optimize_xam.cpp.htm" target="_top">fun_optimize_xam.cpp</a><br> </td><td> C++: Optimize an d_fun: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_optimize_xam.py.htm" target="_top">fun_optimize_xam.py</a><br> </td><td> Python: Optimize an d_fun: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_property_xam.cpp.htm" target="_top">fun_property_xam.cpp</a><br> </td><td> C++: d_fun Properties: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_property_xam.py.htm" target="_top">fun_property_xam.py</a><br> </td><td> Python: d_fun Properties: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_reverse_xam.cpp.htm" target="_top">fun_reverse_xam.cpp</a><br> </td><td> C++: Reverse Mode AD: Example and Test </td></tr><tr valign="top"><td>
<a href="fun_reverse_xam.py.htm" target="_top">fun_reverse_xam.py</a><br> </td><td> Python: Reverse Mode AD: Example and Test </td></tr><tr valign="top"><td>

<b><big><a name="G">G</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="get_cppad.sh.htm" target="_top">get_cppad.sh</a><br> </td><td> Get Cppad </td></tr><tr valign="top"><td>

<b><big><a name="L">L</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="library.htm" target="_top">library</a><br> </td><td> The Cppad Py Libraries </td></tr><tr valign="top"><td>

<b><big><a name="M">M</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="more_cpp.htm" target="_top">more_cpp</a><br> </td><td> Steps To Add More C++ Functions </td></tr><tr valign="top"><td>
<a href="more_py.htm" target="_top">more_py</a><br> </td><td> Steps To Add More Python Functions </td></tr><tr valign="top"><td>

<b><big><a name="N">N</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="numpy2vec.htm" target="_top">numpy2vec</a><br> </td><td> Convert a Numpy Array to a cppad_py Vector </td></tr><tr valign="top"><td>

<b><big><a name="P">P</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="py_abort_recording.htm" target="_top">py_abort_recording</a><br> </td><td> Abort Recording </td></tr><tr valign="top"><td>
<a href="py_fun.htm" target="_top">py_fun</a><br> </td><td> Cppad Py AD Functions </td></tr><tr valign="top"><td>
<a href="py_fun_ctor.htm" target="_top">py_fun_ctor</a><br> </td><td> Stop Current Recording and Store Function Object </td></tr><tr valign="top"><td>
<a href="py_fun_forward.htm" target="_top">py_fun_forward</a><br> </td><td> Forward Mode AD </td></tr><tr valign="top"><td>
<a href="py_fun_hessian.htm" target="_top">py_fun_hessian</a><br> </td><td> Hessian of an AD Function </td></tr><tr valign="top"><td>
<a href="py_fun_jacobian.htm" target="_top">py_fun_jacobian</a><br> </td><td> Jacobian of an AD Function </td></tr><tr valign="top"><td>
<a href="py_fun_new_dynamic.htm" target="_top">py_fun_new_dynamic</a><br> </td><td> New Dynamic Parameters </td></tr><tr valign="top"><td>
<a href="py_fun_optimize.htm" target="_top">py_fun_optimize</a><br> </td><td> Optimize an AD Function </td></tr><tr valign="top"><td>
<a href="py_fun_property.htm" target="_top">py_fun_property</a><br> </td><td> Properties of a Function Object </td></tr><tr valign="top"><td>
<a href="py_fun_reverse.htm" target="_top">py_fun_reverse</a><br> </td><td> Reverse Mode AD </td></tr><tr valign="top"><td>
<a href="py_hes_sparsity.htm" target="_top">py_hes_sparsity</a><br> </td><td> Hessian Sparsity Patterns </td></tr><tr valign="top"><td>
<a href="py_independent.htm" target="_top">py_independent</a><br> </td><td> Declare Independent Variables and Start Recording </td></tr><tr valign="top"><td>
<a href="py_jac_sparsity.htm" target="_top">py_jac_sparsity</a><br> </td><td> Jacobian Sparsity Patterns </td></tr><tr valign="top"><td>
<a href="py_lib.htm" target="_top">py_lib</a><br> </td><td> The Python Library </td></tr><tr valign="top"><td>
<a href="py_sparse.htm" target="_top">py_sparse</a><br> </td><td> Python Sparsity Routines </td></tr><tr valign="top"><td>
<a href="py_sparse_hes.htm" target="_top">py_sparse_hes</a><br> </td><td> Computing Sparse Hessians </td></tr><tr valign="top"><td>
<a href="py_sparse_jac.htm" target="_top">py_sparse_jac</a><br> </td><td> Computing Sparse Jacobians </td></tr><tr valign="top"><td>
<a href="py_sparse_rc.htm" target="_top">py_sparse_rc</a><br> </td><td> Sparsity Patterns </td></tr><tr valign="top"><td>
<a href="py_sparse_rcv.htm" target="_top">py_sparse_rcv</a><br> </td><td> Sparse Matrices </td></tr><tr valign="top"><td>
<a href="py_utility.htm" target="_top">py_utility</a><br> </td><td> Python Utilities </td></tr><tr valign="top"><td>

<b><big><a name="S">S</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="setup.py.htm" target="_top">setup.py</a><br> </td><td> Configure and Build the cppad_py Python Module </td></tr><tr valign="top"><td>
<a href="sparse.htm" target="_top">sparse</a><br> </td><td> Cppad Py Sparse Calculation </td></tr><tr valign="top"><td>
<a href="sparse_hes_pattern_xam.cpp.htm" target="_top">sparse_hes_pattern_xam.cpp</a><br> </td><td> C++: Hessian Sparsity Patterns: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_hes_pattern_xam.py.htm" target="_top">sparse_hes_pattern_xam.py</a><br> </td><td> Python: Hessian Sparsity Patterns: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_hes_xam.cpp.htm" target="_top">sparse_hes_xam.cpp</a><br> </td><td> C++: Hessian Sparsity Patterns: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_hes_xam.py.htm" target="_top">sparse_hes_xam.py</a><br> </td><td> Python: Hessian Sparsity Patterns: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_jac_pattern_xam.cpp.htm" target="_top">sparse_jac_pattern_xam.cpp</a><br> </td><td> C++: Jacobian Sparsity Patterns: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_jac_pattern_xam.py.htm" target="_top">sparse_jac_pattern_xam.py</a><br> </td><td> Python: Jacobian Sparsity Patterns: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_jac_xam.cpp.htm" target="_top">sparse_jac_xam.cpp</a><br> </td><td> C++: Computing Sparse Jacobians: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_jac_xam.py.htm" target="_top">sparse_jac_xam.py</a><br> </td><td> Python: Computing Sparse Jacobians: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_rc_xam.cpp.htm" target="_top">sparse_rc_xam.cpp</a><br> </td><td> C++: Sparsity Patterns: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_rc_xam.py.htm" target="_top">sparse_rc_xam.py</a><br> </td><td> Python: Sparsity Patterns: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_rcv_xam.cpp.htm" target="_top">sparse_rcv_xam.cpp</a><br> </td><td> C++: Sparsity Patterns: Example and Test </td></tr><tr valign="top"><td>
<a href="sparse_rcv_xam.py.htm" target="_top">sparse_rcv_xam.py</a><br> </td><td> Python: Sparsity Patterns: Example and Test </td></tr><tr valign="top"><td>

<b><big><a name="V">V</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="vec2a_double.htm" target="_top">vec2a_double</a><br> </td><td> Convert a CppAD::AD&lt;double&gt; Vector to an a_double Vector </td></tr><tr valign="top"><td>
<a href="vec2cppad_double.htm" target="_top">vec2cppad_double</a><br> </td><td> Convert an a_double Vector to a CppAD::AD&lt;double&gt; Vector </td></tr><tr valign="top"><td>
<a href="vec2numpy.htm" target="_top">vec2numpy</a><br> </td><td> Convert a cppad_py Vector to a Numpy Array </td></tr><tr valign="top"><td>
<a href="vector.htm" target="_top">vector</a><br> </td><td> Cppad Py Vectors </td></tr><tr valign="top"><td>
<a href="vector_ctor.htm" target="_top">vector_ctor</a><br> </td><td> Cppad Py Vector Constructors </td></tr><tr valign="top"><td>
<a href="vector_set_get.htm" target="_top">vector_set_get</a><br> </td><td> Setting and Getting Vector Elements </td></tr><tr valign="top"><td>
<a href="vector_set_get_xam.cpp.htm" target="_top">vector_set_get_xam.cpp</a><br> </td><td> C++: Setting and Getting Vector Elements: Example and Test </td></tr><tr valign="top"><td>
<a href="vector_set_get_xam.py.htm" target="_top">vector_set_get_xam.py</a><br> </td><td> Python: Setting and Getting Vector Elements: Example and Test </td></tr><tr valign="top"><td>
<a href="vector_size.htm" target="_top">vector_size</a><br> </td><td> Size of a Vector </td></tr><tr valign="top"><td>
<a href="vector_size_xam.cpp.htm" target="_top">vector_size_xam.cpp</a><br> </td><td> C++: Size of Vectors: Example and Test </td></tr><tr valign="top"><td>
<a href="vector_size_xam.py.htm" target="_top">vector_size_xam.py</a><br> </td><td> Python: Size of Vectors: Example and Test </td></tr><tr valign="top"><td>

<b><big><a name="W">W</a></big></b> </td><td>  </td></tr><tr valign="top"><td>
<a href="whats_new_2018.htm" target="_top">whats_new_2018</a><br> </td><td> Cppad Py Changes During 2018 </td></tr><tr valign="top"><td>
</td></tr></table>

</body>
</html>
