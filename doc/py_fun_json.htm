<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Json Representation of AD Computation Graph</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Json Representation of AD Computation Graph">
<meta name="keywords" id="keywords" content=" json representation ad computation graph syntax f to_json from_json examples ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_py_fun_json_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/cppad_py" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="fun_optimize_xam.py.htm" target="_top">Prev</a>
</td><td><a href="fun_to_json_xam.py.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_py</option>
<option>library</option>
<option>py_lib</option>
<option>py_fun</option>
<option>py_fun_json</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_py_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_library_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_py_lib_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_py_fun_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_py_fun_json_htm.js'></script>
</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@<center><b><big><big>Json Representation of AD Computation Graph</big></big></b></center>

<br><a href="py_fun_json.htm#Syntax" target="_top">Syntax</a>
<br><a href="py_fun_json.htm#f" target="_top">f</a>
<br><a href="py_fun_json.htm#json" target="_top">json</a>
<br><a href="py_fun_json.htm#to_json" target="_top">to_json</a>
<br><a href="py_fun_json.htm#from_json" target="_top">from_json</a>
<br><a href="py_fun_json.htm#Examples" target="_top">Examples</a>
<br><br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>json</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.to_json()<br>
</span></font></code>

<code><i><font color="black"></font></i><font color="blue"><span style='white-space: nowrap'>f</span></font><i><font color="black"><span style='white-space: nowrap'>.from_json(json)<br>
</span></font></i></code>
<br>
<b><big><a name="f" id="f">f</a></big></b>
<br>
This is a <a href="py_fun_ctor.htm#Syntax.d_fun" target="_top"><span style='white-space: nowrap'>d_fun</span></a>
 function object.

<br>
<br>
<b><big><a name="json" id="json">json</a></big></b>
<br>
is a <code><font color="blue">str</font></code> containing
a Json representation of the computation graph corresponding to

<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
; see the CppAD documentation for
<a href="https://coin-or.github.io/CppAD/doc/json_ad_graph.htm" target="_top"><span style='white-space: nowrap'>json_ad_graph</span></a>
.

<br>
<br>
<b><big><a name="to_json" id="to_json">to_json</a></big></b>
<br>
In this case, the function object 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 is constant and
the return value 
<code><i><font color="black"><span style='white-space: nowrap'>json</span></font></i></code>
 is created.

<br>
<br>
<b><big><a name="from_json" id="from_json">from_json</a></big></b>
<br>
In this case, the argument 
<code><i><font color="black"><span style='white-space: nowrap'>json</span></font></i></code>
 is constant and
the function 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 is changed so it corresponds to 
<code><i><font color="black"><span style='white-space: nowrap'>json</span></font></i></code>
.


<br>
<br>
<b><big><a name="Examples" id="Examples">Examples</a></big></b>

<br>
<a href="fun_to_json_xam.py.htm" target="_top"><span style='white-space: nowrap'>fun_to_json_xam.py</span></a>
,
<a href="fun_from_json_xam.py.htm" target="_top"><span style='white-space: nowrap'>fun_from_json_xam.py</span></a>
.


<hr>Input File: lib/python/cppad_py/fun_json.omh

</body>
</html>
